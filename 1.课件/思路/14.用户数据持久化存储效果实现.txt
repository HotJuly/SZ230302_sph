问题:如果刷新当前页面,此时Vuex中存储的数据就会丢失
	扩展:Vuex的数据是存在内存中的,而sessionStorage的数据也是存在内存中的,但是sessionStorage他刷新页面数据不会丢失

原因:刷新页面,浏览器就会重新请求服务器的html文件,那么js中的Vue,Vuex等代码会初始化,,所以数据会被清空

需求:
	如果用户在该项目有登陆过,那么第二次打开该项目的时候,自动展示用户相关信息

	上述功能成为7天免登陆

拆解:
	1.如何知道用户有没有登陆过?
		只要用户登陆过之后,一定会有token和userInfo

	2.什么叫做第二次打开项目?
		其实指的就是每次项目启动的时候

	3.自动展示用户相关信息
		问题:什么是自动?
		回答:用户什么都不用做,效果就会实现
			其实只是用户不用做,不是开发人员不用做
				也就是说,其实是我们开发者帮用户做某些事情

		问题:用户能看到的是哪些相关信息?
		回答:他能直观看到的是用户自己的个人信息(userInfo)

	总结:用户在下次启动项目的时候,还能看到个人信息
	

	扩展需求:用户即便关闭浏览器,下次也要能看得到当前的数据
	回答:最终我们决定使用localStorage实现该功能,
		因为localStorage无论用户是刷新标签页还是关闭浏览器再打开,都可以获取到上次的数据
		而sessionStorage只有刷新标签页,能做到保留数据,关闭标签页数据就会丢失,所以不适用


	思路:使用localStorage保存数据
		问题:保存什么数据?
		回答:
			1.保存userInfo
				该方案可行,但是不好
				因为用户随时可能修改个人信息,很可能出现数据不同步的效果
					例如:缓存的昵称是7月,过两天用户改成了9月,但页面还是显示7月


			2.保存token
				该方案可行
					问题:为什么保存token比保存userInfo更好?
					回答:因为token的核心数据是用户的id,而服务器上,用户id是不会修改的,所以token不会出现数据不同步的效果

				扩展问题:为什么登陆流程会有两个接口?
				回答:
					login接口是用帐号密码兑换token
					getUserInfo接口是用token兑换个人信息

					如果只有一个接口,使用帐号密码兑换个人信息,那么我们不能保存用户的帐号密码,
						那么就没办法满足接口要求,那么就无法实现7天免登陆功能






